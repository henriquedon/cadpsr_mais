from werkzeug.security import generate_password_hash, check_password_hash
from cadpsr import db, login
from flask_login import UserMixin


class Colaborador(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True, index=True)
    status = db.Column(db.String(20))
    nome_civil = db.Column(db.String(60), index=True)
    nome_social = db.Column(db.String(60))
    cpf = db.Column(db.String(11), index=True)
    data_nascimento = db.Column(db.String(10))
    email = db.Column(db.String(60), index=True)
    senha = db.Column(db.String(128))
    iniciativa = db.Column(db.String(10))
    tipo_clb = db.Column(db.String(60))
    lotacao = db.Column(db.String(60))
    data_criacao = db.Column(db.String(30))
    data_atualizacao = db.Column(db.String(30))
    criado_por = db.Column(db.String(60))
    modificado_por = db.Column(db.String(60))

    def seta_senha_hash(self, senha):
        self.senha = generate_password_hash(senha)

    def verifica_senha_hash(self, senha):
        return check_password_hash(self.senha, senha)

@login.user_loader
def load_user(id):
    return Colaborador.query.get(int(id))

class Entidade(db.Model):
    id = db.Column(db.Integer, primary_key=True, index=True)
    status = db.Column(db.String(20))
    iniciativa = db.Column(db.String(10))
    tipo = db.Column(db.String(60))
    natureza = db.Column(db.String(15))
    nome = db.Column(db.String(60), index=True)
    email = db.Column(db.String(60))
    telefone = db.Column(db.String(15))
    endereco = db.Column(db.String(100))
    cep = db.Column(db.String(9))
    cidade = db.Column(db.String(60))
    uf = db.Column(db.String(2))
    data_criacao = db.Column(db.String(30))
    data_atualizacao = db.Column(db.String(30))
    criado_por = db.Column(db.String(60))
    modificado_por = db.Column(db.String(60))


class Pessoa(db.Model):
    id = db.Column(db.Integer, primary_key=True, index=True)
    status = db.Column(db.String(20), nullable=True)
    data_criacao = db.Column(db.String(30), nullable=True)
    data_atualizacao = db.Column(db.String(30), nullable=True)
    criado_por = db.Column(db.String(60), nullable=True)
    modificado_por = db.Column(db.String(60), nullable=True)
    nome_civil = db.Column(db.String(60), index=True, nullable=True)
    nome_social = db.Column(db.String(60), nullable=True)
    apelido = db.Column(db.String(60), nullable=True)
    cpf = db.Column(db.String(11), index=True, nullable=True)
    data_nascimento = db.Column(db.String(10), nullable=True)
    cidade_atual = db.Column(db.String(60), nullable=True)
    entidade_geradora = db.Column(db.String(80), nullable=True)
    entidade_referencia = db.Column(db.String(80), nullable=True)
    email = db.Column(db.String(60), nullable=True)
    telefone = db.Column(db.String(15), nullable=True)
    celular = db.Column(db.String(15), nullable=True)
    etnia =  db.Column(db.String(10), nullable=True)
    sexo =  db.Column(db.String(10), nullable=True)
    orientacao_sexual = db.Column(db.String(16), nullable=True)
    identidade_genero = db.Column(db.String(16), nullable=True)
    rg = db.Column(db.String(16), nullable=True)
    rg_dv = db.Column(db.String(1), nullable=True)
    rg_uf = db.Column(db.String(2), nullable=True)
    rg_emissao = db.Column(db.String(10), nullable=True)
    rg_orgao_emissor = db.Column(db.String(60), nullable=True)
    titulo_eleitor = db.Column(db.String(12), nullable=True)
    titulo_zona =  db.Column(db.String(6), nullable=True)
    titulo_secao =  db.Column(db.String(6), nullable=True)
    titulo_emissao = db.Column(db.String(10), nullable=True)
    cns =  db.Column(db.String(15), nullable=True)
    nis =  db.Column(db.String(12), nullable=True)
    certidao_nascimento = db.Column(db.String(32), nullable=True)
    naturalidade = db.Column(db.String(60), nullable=True)
    nacionalidade = db.Column(db.String(30), nullable=True)
    questao_migracao = db.Column(db.String(40), nullable=True)
    crnm_rnm = db.Column(db.String(20), nullable=True)
    crnm_filiacao_a = db.Column(db.String(60), nullable=True)
    crnm_filiacao_b = db.Column(db.String(60), nullable=True)
    crnm_validade = db.Column(db.String(10), nullable=True)
    crnm_classificacao = db.Column(db.String(30), nullable=True)
    crnm_domicilio = db.Column(db.String(100), nullable=True)
    crnm_emissao = db.Column(db.String(10), nullable=True)
    questao_migracao = db.Column(db.String(15), nullable=True)
    questao_1 = db.Column(db.String(15), nullable=True)
    questao_2 = db.Column(db.String(15), nullable=True)
    questao_3 = db.Column(db.String(15), nullable=True)
    questao_4 = db.Column(db.String(15), nullable=True)
    questao_5 = db.Column(db.String(15), nullable=True)
    questao_6 = db.Column(db.String(15), nullable=True)
    questao_7 = db.Column(db.String(15), nullable=True)
    questao_8 = db.Column(db.String(15), nullable=True)
    questao_9 = db.Column(db.String(15), nullable=True)
    questao_10 = db.Column(db.String(15), nullable=True)
    questao_11 = db.Column(db.String(6), nullable=True)
    questao_12 = db.Column(db.String(15), nullable=True)
    questao_13 = db.Column(db.String(15), nullable=True)
    questao_14 = db.Column(db.String(15), nullable=True)
    obs_psr = db.Column(db.String(500), nullable=True)


class Acesso(db.Model):
    id_acesso = db.Column(db.Integer, primary_key=True, index=True)
    data_hora = db.Column(db.String(30))
    id_clb = db.Column(db.Integer, index=True)
    nome_clb = db.Column(db.String(60), index=True)
    status_clb = db.Column(db.String(10))
    lotacao_clb = db.Column(db.String(60))


class Atendimento(db.Model):
    id = db.Column(db.Integer, primary_key=True, index=True)
    data_atendimento = db.Column(db.String(30), nullable=True)
    id_pessoa = db.Column(db.Integer, index=True)
    nome_pessoa = db.Column(db.String(60), index=True)
    tipo_atendimento = db.Column(db.String(5), nullable=True, index=True)
    id_colaborador = db.Column(db.Integer, index=True)
    nome_colaborador = db.Column(db.String(60), nullable=True, index=True)
    entidade_geradora = db.Column(db.String(60), index=True)
    obs_atendimento = db.Column(db.String(500), nullable=True)
